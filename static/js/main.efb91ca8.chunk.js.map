{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","handleChange","event","setState","newTextValue","target","value","handleEditChange","e","editText","handleKeyPress","keyCode","handleSubmit","preventDefault","state","newItem","index","list","length","completed","editing","prevState","concat","alert","handleDelete","key","updatedlist","filter","item","handleEdit","editedList","map","handleSubmitEdit","prevVal","bind","type","placeholder","this","onChange","onKeyDown","onClick","className","defaultValue","disabled","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efb91ca8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      newTextValue: \"\",\n      list: []\n    }\n    this.editText = \"\"\n    this.handleChange = this.handleChange.bind(this)\n    this.handleEditChange = this.handleEditChange.bind(this)\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      newTextValue: event.target.value\n    })\n  }\n\n  handleEditChange = (e) => {\n    this.editText = e.target.value\n  };\n\n  handleKeyPress = (event) => {\n    if (event.keyCode === 13)\n      this.handleSubmit(event);\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.newTextValue !== \"\") {\n      let newItem = {\n        index: this.state.list.length + 1,\n        value: this.state.newTextValue\n        ,\n        completed: true,\n        editing: false,\n\n      }\n      this.setState((prevState) => {\n        return {\n          list: prevState.list.concat(newItem)\n        }\n      })\n    }\n    else {\n      alert(\"CANNOT ADD EMPTY TASK!!\")\n    }\n    this.setState({ newTextValue: \"\" })\n  }\n\n  handleDelete = (key) => {\n    let updatedlist = this.state.list.filter(function filteredItems(item) {\n      return (item.index !== key);\n    })\n    this.setState({\n      list: updatedlist\n    })\n  }\n\n  handleEdit = (key) => {\n    const editedList = this.state.list.map((item) => {\n      if (item.index === key) {\n        item.editing = !item.editing;\n      }\n      return item;\n    });\n\n    this.setState({\n      list: editedList\n\n    })\n  }\n\n  handleSubmitEdit = (key, value, prevVal) => {\n    const editedList = this.state.list.map((item) => {\n      if (item.index === key) {\n        item.value = (value === \"\" ? prevVal : value);\n        item.editing = !item.editing;\n      }\n      return item;\n    });\n\n    this.setState({\n      list: editedList\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>To-Do </h1>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your todo\"\n            value={this.state.newTextValue\n            }\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyPress} />\n\n          <button type=\"submit\" onClick={this.handleSubmit}>ADD</button>\n\n          {this.state.list.map((item) => (\n            <div className=\"task-wrapper\" key={item.index}>\n              {item.editing ? (\n                <div>\n                  <input\n                    type=\"text\"\n                    defaultValue={item.value}\n                    onChange={this.handleEditChange}\n                  />\n                  <button disabled={!item.completed} onClick={() => this.handleSubmitEdit(item.index, this.editText, item.value)}>Save</button>\n                </div>\n              ) : (\n                <div>\n                  <span>{item.value}</span>\n                  <button disabled={!item.completed} onClick={() => this.handleEdit(item.index)}>Edit</button>\n                </div>\n              )}\n              <button onClick={() => this.handleDelete(item.index)}>DELETE</button>\n            </div>\n          ))}\n        </div>\n      </div >\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}